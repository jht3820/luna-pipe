<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="rep1000DAO">
	<typeAlias alias="egovMap" 		type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="oslSnakeMap" 		type="kr.opensoftlab.sdf.util.OslSnakeMap"/>
	<typeAlias alias="rep1000VO"	type="kr.opensoftlab.lunaops.rep.rep1000.rep1000.vo.Rep1000VO"/>
	<typeAlias alias="RepVO"	type="kr.opensoftlab.sdf.rep.com.vo.RepVO"/>

	<resultMap id="resultMapSelectRep1000" class="rep1000VO">
		<result property="rn"  			column="RN"/>
		<result property="repId"     column="REP_ID" />  
		<result property="repNm"     column="REP_NM" />  
		<result property="repTypeCd"     column="REP_TYPE_CD" />  
		<result property="repTypeNm"     column="REP_TYPE_NM" />  
		<result property="repTxt"       column="REP_TXT" />  
		<result property="svnRepUrl"    column="SVN_REP_URL" />  
		<result property="gitRepUrl"    column="GIT_REP_URL" />  
		<result property="dplRepUrl"    column="DPL_REP_URL" />  
		<result property="gitUsrAuthTypeCd"    column="GIT_USR_AUTH_TYPE_CD" />  
		<result property="dplUseCd"        column="DPL_USE_CD" />  
		<result property="useCd"        column="USE_CD" />  
		<result property="regDtm"  		column="REG_DTM"/>
		<result property="useNm"  		column="USE_NM"/>
		<result property="regUsrId"  	column="REG_USR_ID"/>
    </resultMap>
    
    <resultMap id="resultMapRepVO" class="RepVO">
		<result property="repId"     column="REP_ID" />  
		<result property="repNm"     column="REP_NM" />  
		<result property="repTypeCd"     column="REP_TYPE_CD" />  
		<result property="repTxt"       column="REP_TXT" />  
		<result property="svnRepUrl"    column="SVN_REP_URL" /> 
		<result property="svnUsrId"    column="SVN_USR_ID" />
		<result property="svnUsrPw"    column="SVN_USR_PW" />
		<result property="svnBrcPath"    column="SVN_BRC_PATH" />
		<result property="gitUsrAuthTypeCd"    column="GIT_USR_AUTH_TYPE_CD" />  
		<result property="gitRepUrl"    column="GIT_REP_URL" /> 
		<result property="gitUsrId"    column="GIT_USR_ID" />
		<result property="gitUsrPw"    column="GIT_USR_PW" /> 
		<result property="gitUsrTk"    column="GIT_USR_TK" /> 
		<result property="dplRepUrl"    column="DPL_REP_URL" /> 
		<result property="dplUsrId"    column="DPL_USR_ID" />
		<result property="dplUsrPw"    column="DPL_USR_PW" />
		<result property="dplUseCd"        column="DPL_USE_CD" />  
		<result property="useCd"        column="USE_CD" />  
    </resultMap>
   	
	
	
	<sql id="selectRep1000List">
		<![CDATA[
			SELECT
		            REP_ID ,                
		            REP_NM ,                
		            REP_TYPE_CD ,			
		            SF_CMM1001_COM_CD_INFO('REP00001', REP_TYPE_CD, '1') as REP_TYPE_NM ,
		            REPLACE (REP_TXT ,'<br>' , '&nbsp;&nbsp;&nbsp;&nbsp;' ) AS REP_TXT  ,                  
		            SVN_REP_URL ,               
		            GIT_REP_URL ,               
		            DPL_REP_URL ,
		            DPL_USE_CD ,                   
		            USE_CD ,                   
		            SF_CMM1001_COM_CD_INFO('CMM00001', USE_CD, '1') as USE_NM ,
		            GIT_USR_AUTH_TYPE_CD , 
				    TO_CHAR(REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM ,        
		            REG_USR_ID ,                
		            REG_USR_IP ,                
		            MODIFY_DTM ,                
		            MODIFY_USR_ID ,             
		            MODIFY_USR_IP               
			FROM
		            REP1000
			WHERE   1=1
		]]>
		<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchTxt">
			<isEqual property="searchSelect" compareValue="repNm"> 
				AND		UPPER( REP_NM ) like '%'|| UPPER( #searchTxt# ) ||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="repTxt"> 
				AND		UPPER( REP_TXT )  like '%'|| UPPER( #searchTxt#  ) ||'%'
			</isEqual>
			</isNotEmpty>
		</isNotEmpty>
		
		<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchCd">
				<isEqual property="searchSelect" compareValue="useCd">
					AND		USE_CD = #searchCd#
				</isEqual>
				<isEqual property="searchSelect" compareValue="repTypeCd">
					AND		REP_TYPE_CD = #searchCd#
				</isEqual>
			</isNotEmpty>
		</isNotEmpty>
		ORDER BY REG_DTM DESC
    </sql>
    
    
    <select id="rep1000DAO.selectRep1000RepositoryList" parameterClass="rep1000VO"  resultMap="resultMapSelectRep1000">
	    
		SELECT *
		FROM
			(
    		SELECT ROWNUM RN,
    			     A.*
    		FROM
    		(
					<include refid="selectRep1000List"/>
	    			) A
	    	)
	    	 WHERE RN BETWEEN (#firstIndex#+1) AND #lastIndex#
    </select>
    
    
    <select id="rep1000DAO.selectRep1000RepositoryListCnt" parameterClass="rep1000VO"  resultClass="java.lang.Integer">
	    
	    	SELECT
					COUNT(*)
			FROM	(
						<include refid="selectRep1000List"/>
					) A
    </select>
    
	 
	<select id="rep1000DAO.selectRep1000Info" parameterClass="java.util.Map"  resultMap="resultMapRepVO">
		
			SELECT
			            REP_ID,               
			            REP_NM,              
			            REP_TYPE_CD,			 
			            REP_TXT,                 
			            SVN_REP_URL,              
			            SVN_USR_ID,               
			            SVN_USR_PW,               
			            SVN_BRC_PATH,			
			            GIT_USR_AUTH_TYPE_CD,	
			            GIT_REP_URL,              
			            GIT_USR_ID,               
			            GIT_USR_PW,              
			            GIT_USR_TK,				 
			            DPL_REP_URL,              
			            DPL_USR_ID,               
			            DPL_USR_PW,              
			            DPL_USE_CD,
			            USE_CD,                   
			            REG_DTM,                  
			            REG_USR_ID,               
			            REG_USR_IP,               
			            MODIFY_DTM,               
			            MODIFY_USR_ID,            
			            MODIFY_USR_IP             
			FROM
			            REP1000
			WHERE       1=1
			<isEmpty property="likeSvnRepUrl">
				<isNotEmpty property="repUuid">
					AND		REP_UUID = #repUuid#			
				</isNotEmpty>
				<isNotEmpty property="repDplUuid">
					AND		REP_DPL_UUID = #repDplUuid#			
				</isNotEmpty>
				<isEmpty property="repUuid">
					<isEmpty property="repDplUuid">
						AND       REP_ID = #repId# 
					</isEmpty>
				</isEmpty>
			</isEmpty>
			<isNotEmpty property="likeSvnRepUrl">
				AND SVN_REP_URL LIKE '%' || #likeSvnRepUrl#
			</isNotEmpty>
	</select>


    <insert id="rep1000DAO.insertRep1000Info" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newRepId">
		<![CDATA[
			 
			SELECT	NVL( 
							SUBSTR(NEW_REP_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_REP_ID, 12, 5)) + 1) , 5, '0')
						,	'REP' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '00001'
            		) AS NEW_REP_ID 
			FROM	(
			            SELECT	MAX(REP_ID)  AS NEW_REP_ID
			            FROM	REP1000 A
			            WHERE	1=1
			            AND		REP_ID LIKE 'REP' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>

			 
			INSERT     INTO     REP1000
					(
					            REP_ID             		,  
					            REP_NM             		,  
					            REP_TYPE_CD				, 
					            REP_TXT                	, 
					            REP_UUID				,
					            REP_DPL_UUID			,
					            <isEqual property="repTypeCd" compareValue="02">
						            SVN_REP_URL         ,  
						            SVN_USR_ID          ,  
						            SVN_USR_PW          ,  
						            SVN_BRC_PATH		,
					            </isEqual>
					            <isEqual property="repTypeCd" compareValue="01">
						            GIT_USR_AUTH_TYPE_CD,	
						            GIT_REP_URL         ,  
						            <isEqual property="gitUsrAuthTypeCd" compareValue="02">
							            GIT_USR_ID      ,  
							            GIT_USR_PW      ,  
						            </isEqual>
						            <isEqual property="gitUsrAuthTypeCd" compareValue="01">
						            	GIT_USR_TK      ,  
						            </isEqual>
					            </isEqual>
					            <isEqual property="dplUseCd" compareValue="01">
					            	DPL_REP_URL			,
					            	DPL_USR_ID			,
					            	DPL_USR_PW			,
					            </isEqual>
					            DPL_USE_CD             ,  
					            USE_CD                 ,  
					            REG_DTM                ,  
					            REG_USR_ID             ,  
					            REG_USR_IP             ,  
					            MODIFY_DTM             ,  
					            MODIFY_USR_ID          ,  
					            MODIFY_USR_IP            
					)
			VALUES
					(
					             #newRepId#    , 
					             #repNm#    	, 
					             #repTypeCd#    , 
					             #repTxt#		, 
					             <isEqual property="repTypeCd" compareValue="01">
						             'https://github.com/'||#gitRepUrl#||'.git'		,
					             </isEqual>
					             <isEqual property="repTypeCd" compareValue="02">
						             #repUuid#		,
					             </isEqual>
					             <isEqual property="repTypeCd" compareValue="03">
						             #repUuid#		,
					             </isEqual>
					             #repDplUuid#	,
					             <isEqual property="repTypeCd" compareValue="02">
						             #svnRepUrl#	, 
						             #svnUsrId#		, 
						             #svnUsrPw#		, 
						             #svnBrcPath#	,
					             </isEqual>
					             <isEqual property="repTypeCd" compareValue="01">
						             #gitUsrAuthTypeCd#,
						             #gitRepUrl#	, 
						             <isEqual property="gitUsrAuthTypeCd" compareValue="02">
							             #gitUsrId#		, 
							             #gitUsrPw#		,
						             </isEqual>
						             <isEqual property="gitUsrAuthTypeCd" compareValue="01">
						             	#gitUsrTk#		, 
						             </isEqual>
					             </isEqual>
					             <isEqual property="dplUseCd" compareValue="01">
						             #dplRepUrl#			,
						             #dplUsrId#				,
						             #dplUsrPw#				,
					             </isEqual>
					             #dplUseCd#    , 
					             #useCd#       , 
					             SYSDATE       , 
					             #empId#    , 
					             #regUsrIp#    , 
					             SYSDATE       , 
					             #empId# , 
					             #modifyUsrIp# 
					)
			
	</insert>
    
	
	<update id="rep1000DAO.updateRep1000Info" parameterClass="java.util.Map">
		 
		UPDATE     REP1000     SET 
            REP_NM = #repNm#             , 
            REP_TYPE_CD = #repTypeCd# 			, 
            REP_TXT = #repTxt#                  , 
            REP_UUID = #repUuid#				,
            REP_DPL_UUID = #repDplUuid#				,
            <isEqual property="repTypeCd" compareValue="02">
	            SVN_REP_URL = #svnRepUrl#           ,  
	            SVN_USR_ID = #svnUsrId#             ,  
	            SVN_USR_PW = #svnUsrPw#             , 
	            SVN_BRC_PATH = #svnBrcPath#			,
            </isEqual> 
            <isEqual property="repTypeCd" compareValue="01">
	            GIT_USR_AUTH_TYPE_CD = #gitUsrAuthTypeCd#	,	
	            GIT_REP_URL = #gitRepUrl#           ,  
				<isEqual property="gitUsrAuthTypeCd" compareValue="02">
		            GIT_USR_ID = #gitUsrId#             ,  
	            	GIT_USR_PW = #gitUsrPw#             ,  
	            </isEqual>
	            <isEqual property="gitUsrAuthTypeCd" compareValue="01">
					GIT_USR_TK = #gitUsrTk#             , 
	            </isEqual>
            </isEqual> 
            <isEqual property="dplUseCd" compareValue="01">
            	DPL_REP_URL = #dplRepUrl#	,
				DPL_USR_ID = #dplUsrId#		,
				DPL_USR_PW = #dplUsrPw#		,
            </isEqual>
            DPL_USE_CD = #dplUseCd#                    ,  
            USE_CD = #useCd#                    ,  
            MODIFY_DTM = SYSDATE                ,  
            MODIFY_USR_ID = #empId#       ,  
            MODIFY_USR_IP = #modifyUsrIp#          
		WHERE 1=1
		AND   		REP_ID = #repId#               
	</update>
	
	
	<delete id="rep1000DAO.deleteRep1000Info" parameterClass="java.util.Map">
		DELETE FROM	REP1000 A
		WHERE	1=1
		AND   	REP_ID = #repId#               
	</delete>
	
	
	
	<select id="rep1000DAO.selectRep1000UseCountInfo" parameterClass="java.util.Map"  resultClass="java.lang.Integer">
		SELECT	COUNT(1) AS CNT
		FROM 	REP1001 A
		WHERE    1=1
		AND   	REP_ID = #repId#               
        AND     ROWNUM = 1
	</select>
	
	
	<select id="rep1000DAO.selectRep1001CIRepList" parameterClass="java.util.Map" resultClass="oslSnakeMap">
		
		SELECT 
			A.CI_ID
			, A.REP_ID
			, B.REP_NM
			, B.REP_TXT
			, B.SVN_REP_URL 
			, B.GIT_REP_URL
			<!-- 
			, B.USE_CD
			, A.REG_DTM
            , A.REG_USR_ID
            , A.REG_USR_IP
            , A.MODIFY_DTM
            , A.MODIFY_USR_ID
            , A.MODIFY_USR_IP
             -->
		FROM REP1001 A LEFT JOIN REP1000 B ON (A.REP_ID = B.REP_ID) 
		WHERE 1=1
		AND A.CI_ID = #ciId# 
	</select>
	
	
	<delete id="rep1000DAO.deleteRep1001CIRepInfo" parameterClass="java.util.Map">
		 
		DELETE FROM	REP1001
		WHERE 1=1
		AND CI_ID = #ciId#
		<isNotEmpty property="repId">
			AND REP_ID = #repId#
		</isNotEmpty>
	</delete>
	
	
	<delete id="rep1000DAO.deleteRep1001RepInfo" parameterClass="java.util.Map">
		 
		DELETE FROM	REP1001
		WHERE 1=1
		AND REP_ID = #repId#
	</delete>
	
	
	<insert id="rep1000DAO.insertRep1001CIRepInfo" parameterClass="java.util.Map">
		 
		INSERT INTO REP1001 (
			CI_ID,				REP_ID
			,REG_DTM,			REG_USR_ID,			REG_USR_IP
            ,MODIFY_DTM,		MODIFY_USR_ID,		MODIFY_USR_IP
		)
		VALUES (
			#ciId#,				#repId#
			,SYSDATE,			#regUsrId#,			#regUsrIp#
			,SYSDATE,			#regUsrId#,			#regUsrIp#
		)
	</insert>
</sqlMap>
